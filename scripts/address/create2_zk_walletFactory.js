const zkSync = require("zksync-web3")
const ethers = require("ethers")
const web3 = require("web3")

async function create2Address() {
    //0x06902C817113Db7f0EcCf5D17bD5d1bdf22731Ec
    //const sender = "0x06902C817113Db7f0EcCf5D17bD5d1bdf22731Ec"
    const sender = "0xFC030E8fE81dF954B94015dFBbC54953E78d7b61"
    const hash = zkSync.utils.hashBytecode("0x0004000000000002000100000000000200000000030100190000006003300270000000500430019700030000004103550002000000010355000000500030019d000100000000001f0000000101200190000000340000c13d0000008005000039000000400050043f0000000001000031000000040210008c000000460000413d0000000201000367000000000101043b0000005701100197000000580110009c0000005d0000c13d0000000001000416000000000110004c0000008a0000c13d000000040100008a00000000011000310000005102000041000000000310004c000000000300001900000000030240190000005101100197000000000410004c000000000200a019000000510110009c00000000010300190000000001026019000000000110004c0000008a0000c13d000000400050043f00000059010000410000000000100439000000000100041200000004001004430000002400000443000100000005001d013b00a50000040f0000005201100197000000800010043f000000200200003900000001010000290000000003000019013b00b40000040f000000a001000039000000400010043f0000000001000416000000000110004c0000008a0000c13d0000000001000031000000bf02100039000000200300008a000000000232016f0000009f0320008c0000005e0000213d000000540100004100000000001004350000004101000039000000040010043f00000024020000390000000001000019013b00b90000040f000000000110004c0000005d0000c13d0000002001000039000000800010043f000000a00000043f000000000500041600000050010000410000000002000414000000500320009c0000000001024019000000c00110021000000055011001c70000800d02000039000000030300003900000056040000410000000006000411013b012c0000040f00000001012001900000008a0000613d000000000100001900000000020000190000000003000019013b00b40000040f013b00c20000040f000000400020043f0000001f0210018f000000020300036700000005041002720000006c0000613d00000000050000190000000506500210000000000763034f000000000707043b000000a00660003900000000007604350000000105500039000000000645004b000000640000413d000000000520004c0000007b0000613d0000000504400210000000000343034f0000000302200210000000a004400039000000000504043300000000052501cf000000000525022f000000000303043b0000010002200089000000000323022f00000000022301cf000000000252019f00000000002404350000005102000041000000200310008c000000000300001900000000030240190000005101100197000000000410004c000000000200a019000000510110009c00000000010300190000000001026019000000000110004c0000008a0000c13d000000a00100043d000000520210009c0000008d0000a13d00000000010000190000000002000019013b00b90000040f000000800010043f000001400000044300000160001004430000002001000039000001000010044300000001010000390000012000100443000001000100003900000080020000390000005303000041013b00b40000040f0000005004000041000000500510009c0000000001048019000000c00110021000000060033002100000000001130019013b01360000040f00000000030100190000006003300270000100500030019d0003000000010355000000010120018f000000000001042d00000050010000410000000002000414000000500320009c0000000001024019000000c0011002100000005a011001c70000800502000039013b01310000040f0000000102200190000000b10000613d000000000101043b000000000001042d00000000010000190000000002000019013b00b90000040f00000040011002100000006002200210000000000112001900000000013100190000013c0001042e0000005003000041000000500420009c0000000002038019000000500410009c000000000103801900000040011002100000006002200210000000000112019f0000013d000104300001000000000002000000020100036700000000020000310000001f0320018f0000000502200272000000d00000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000524004b000000c90000413d000000000430004c000000de0000613d00000003033002100000000502200210000000000402043300000000043401cf000000000434022f000000000121034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000141019f00000000001204350000000001000414000100000001001d00000059010000410000000000100439000000000100041200000004001004430000002400000443013b00a50000040f0000000002010019000000040120008c000001050000c13d000000030100036700000001020000310000001f0320018f0000000502200272000000f60000613d00000000040000190000000505400210000000000651034f000000000606043b00000000006504350000000104400039000000000524004b000000ef0000413d000000000430004c000001280000613d00000003033002100000000502200210000000000402043300000000043401cf000000000434022f000000000121034f000000000101043b0000010003300089000000000131022f00000000013101cf000000000141019f0000000000120435000001280000013d00000000030000310000000101000029013b00980000040f000000030200036700000001030000310000001f0430018f0000000503300272000001150000613d00000000050000190000000506500210000000000762034f000000000707043b00000000007604350000000105500039000000000635004b0000010e0000413d000000000540004c000001230000613d00000003044002100000000503300210000000000503043300000000054501cf000000000545022f000000000232034f000000000202043b0000010004400089000000000242022f00000000024201cf000000000252019f0000000000230435000000000110004c000001280000c13d00000001020000310000000001000019013b00b90000040f000000010200003100000000010000190000000003000019013b00b40000040f0000012f002104210000000102000039000000000001042d00000000020000190000012e0000013d00000134002104230000000102000039000000000001042d0000000002000019000001330000013d00000139002104250000000102000039000000000001042d0000000002000019000001380000013d0000013b000004320000013c0001042e0000013d000104300000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffff8000000000000000000000000000000000000000000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffff00000002000000000000000000000000000000000000000000000000000000004e487b71000000000000000000000000000000000000000000000000000000000200000000000000000000000000000000000040000000800000000000000000606834f57405380c4fb88d1f4850326ad3885f014bab3b568dfbf7a041eef738ffffffff000000000000000000000000000000000000000000000000000000005c60da1b00000000000000000000000000000000000000000000000000000000310ab089e4439a4c15d089f94afb7896ff553aecb10793d0ab882de59d99a32e0200000200000000000000000000000000000044000000000000000000000000")
    
    let bytes32Hash = "0x" + Array.prototype.map
       .call(hash, (x) => ('00' + x.toString(16)).slice(-2))
       .join('')
    //console.log("hash:", hash)
    //console.log("bytes32Hash:", bytes32Hash)
    //console.log("hash:", hash.toString())
    const cat = web3.utils.encodePacked(
        {v:  "0x417801591d4037b5b3479728c00bd56AA31eC4cd", t: 'address'},
        {v: "0x8e6dc8335c38AdFc0c5157bf2fc971b636aE82F0", t: 'address'});
     const cat_hash = web3.utils.keccak256(cat);
     const cat_hash_cat_salt = web3.utils.encodePacked(cat_hash, "0x5aff9041187ad5b5aa718a4719597cd8d6deca5c");
     const _salt_hash = await web3.utils.keccak256(cat_hash_cat_salt);
    
    const salt = _salt_hash;

    const input = ethers.utils.defaultAbiCoder.encode(["address"], ["0xF38F3649A2137ecdD978f15aD6eDd460Ed4De853"])
    //console.log("input:", input)
    //console.log(zkSync.utils.create2Address(sender, hash, salt, input))
    console.log(zkSync.utils.create2Address(sender, bytes32Hash, salt, input))
}

create2Address()